### DEPLOYMENT CONFIG FILE #############################################
# The 'drone-deploy' cli app uses this file to configure terraform.
# Specifically, it creates a terraform.tfvars file in the ./terraform
# directory, which is automatically loaded during deployments.
#########################################################################
## where to deploy
aws_region: us-east-1
vpc_id: ""

## route53 host (machine) name and domain (hosted zone)
# I.E., 'drone.yourdomain.com'
host_name: drone
hosted_zone: yourdomain.com

## drone server instance settings
drone_server_key_pair_name: ""
drone_server_instance_type: t2.micro

## firewall rules
# http and https must be open for drone server to get automatic TLS
# certs from lets encrypt. We should move to dns challenge instead 
# http/https challenge in the future if you want to lock down ports
# 80 and 443. You can always lock down the ports once the cert has
# been issued, and then again when it's time to renew.
# 0.0.0.0/0 == 'Allow all ip addresses.'
# /32 == 'one ip address'
drone_server_allow_http:
- 0.0.0.0/0
drone_server_allow_https:
- 0.0.0.0/0
drone_server_allow_ssh:
- your.public.ip.address/32
- another.admins.ip.address/32

# note: if you do not need ssh access to the drone-server, remove them


### SETTINGS BELOW ARE AUTOGENERATED ###
# The 'drone-server' cli will add/update the following settings, but they
# can be edited directly if desired.
drone_server_ami: ""
drone_deployment_id: ""
