# deploy to (e.g., us-east-1, vpc-1234567)
export DRONE_REGION=THE_AWS_REGION_TO_DEPLOY_TO
export DRONE_VPC_ID=THE_VPC_ID_TO_DEPLOY_TO
export DRONE_BUILDER_ROLE_ARN="COPY AND PASTE FROM TERRAFORM OUTPUT WHEN CREATING ROLES"


# drone registration settings
export DRONE_OPEN=false
export DRONE_ADMIN=YOUR_GITHUB_USER_NAME
export DRONE_USER_FILTER=GITHUB_USER_1,GITHUB_USER_2,AND_SO_ON


# github oath app ( https://github.com/settings/developers -> oath)
export DRONE_GITHUB_SERVER=https://github.com
export DRONE_GITHUB_CLIENT_ID=OATH_CLIENT_ID
export DRONE_GITHUB_CLIENT_SECRET=OATH_CLIENT_SECRET


# drone server
export DRONE_AGENTS_ENABLED=true
export DRONE_SERVER_HOST=DRONE_OR_WHATEVER.YOUR_ROUTE53_DOMAIN.COM


# drone server tls (we use Caddy as a reverse proxy, so don't use set DRONE_TLS_AUTOCERT to true)
export DRONE_SERVER_PROTO=https
export DRONE_TLS_AUTOCERT=false


# docker images we use in this project
export DRONE_IMAGE=drone/drone:1
export TERRAFORM_BASE_IMAGE="hashicorp/terraform:0.11.13"
export PACKER_BASE_IMAGE="hashicorp/packer:1.3.5"


# drone cli
export DRONE_VERSION="1.0.8"

# docker-compose version
export DOCKER_COMPOSE_VERSION="1.24.0"
